{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anthr\\\\wcd\\\\components\\\\Section\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { PostCard } from \"../PostCard\";\nimport { GridSection, LinkSection, TitleSection } from \"../Style\";\nexport const Section = ({\n  title,\n  posts,\n  isCompact = false\n}) => {\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(TitleSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, title), __jsx(GridSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, posts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }))), isCompact && __jsx(Link, {\n    href: `/category/${title}`,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(LinkSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, \"More in \", title)));\n};","map":{"version":3,"sources":["C:/Users/Anthr/wcd/components/Section/index.tsx"],"names":["React","Link","PostCard","GridSection","LinkSection","TitleSection","Section","title","posts","isCompact","map","post","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,UAAvD;AAQA,OAAO,MAAMC,OAAwC,GAAG,CAAC;AACxDC,EAAAA,KADwD;AAExDC,EAAAA,KAFwD;AAGxDC,EAAAA,SAAS,GAAG;AAH4C,CAAD,KAIlD;AACL,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeF,KAAf,CADD,EAEC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACE,GAAN,CAAWC,IAAD,IACV,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CAFD,EAQEF,SAAS,IACT,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,aAAYF,KAAM,EAA/B;AAAkC,IAAA,QAAQ,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsBA,KAAtB,CADD,CATF,CADD;AAgBA,CArBM","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Post as PostType } from \"../../shared/types\";\r\nimport { PostCard } from \"../PostCard\";\r\nimport { GridSection, LinkSection, TitleSection } from \"../Style\";\r\n\r\ninterface SectionProps {\r\n\ttitle: string;\r\n\tposts: PostType[];\r\n\tisCompact?: boolean;\r\n}\r\n\r\nexport const Section: FunctionComponent<SectionProps> = ({\r\n\ttitle,\r\n\tposts,\r\n\tisCompact = false\r\n}) => {\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<TitleSection>{title}</TitleSection>\r\n\t\t\t<GridSection>\r\n\t\t\t\t{posts.map((post) => (\r\n\t\t\t\t\t<PostCard key={post.id} post={post} />\r\n\t\t\t\t))}\r\n\t\t\t</GridSection>\r\n\r\n\t\t\t{isCompact && (\r\n\t\t\t\t<Link href={`/category/${title}`} passHref={true}>\r\n\t\t\t\t\t<LinkSection>More in {title}</LinkSection>\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t</section>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}