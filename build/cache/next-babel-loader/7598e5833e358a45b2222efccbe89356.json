{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Anthr\\\\wcd\\\\components\\\\Section\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { PostCard } from \"../PostCard\";\nimport { GridSection, LinkSection, TitleSection } from \"../Style\";\nexport var Section = function Section(_ref) {\n  var title = _ref.title,\n      posts = _ref.posts,\n      _ref$isCompact = _ref.isCompact,\n      isCompact = _ref$isCompact === void 0 ? false : _ref$isCompact;\n  return __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(TitleSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, title), __jsx(GridSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, posts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }\n    });\n  })), isCompact && __jsx(Link, {\n    href: \"/category/\".concat(title),\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(LinkSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, \"More in \", title)));\n};\n_c = Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"sources":["C:/Users/Anthr/wcd/components/Section/index.tsx"],"names":["React","Link","PostCard","GridSection","LinkSection","TitleSection","Section","title","posts","isCompact","map","post","id"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,UAAvD;AAQA,OAAO,IAAMC,OAAwC,GAAG,SAA3CA,OAA2C,OAIlD;AAAA,MAHLC,KAGK,QAHLA,KAGK;AAAA,MAFLC,KAEK,QAFLA,KAEK;AAAA,4BADLC,SACK;AAAA,MADLA,SACK,+BADO,KACP;AACL,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeF,KAAf,CADD,EAEC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,WACV,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAV,CADF,CAFD,EAQEF,SAAS,IACT,MAAC,IAAD;AAAM,IAAA,IAAI,sBAAeF,KAAf,CAAV;AAAkC,IAAA,QAAQ,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsBA,KAAtB,CADD,CATF,CADD;AAgBA,CArBM;KAAMD,O","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Post as PostType } from \"../../shared/types\";\r\nimport { PostCard } from \"../PostCard\";\r\nimport { GridSection, LinkSection, TitleSection } from \"../Style\";\r\n\r\ninterface SectionProps {\r\n\ttitle: string;\r\n\tposts: PostType[];\r\n\tisCompact?: boolean;\r\n}\r\n\r\nexport const Section: FunctionComponent<SectionProps> = ({\r\n\ttitle,\r\n\tposts,\r\n\tisCompact = false\r\n}) => {\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<TitleSection>{title}</TitleSection>\r\n\t\t\t<GridSection>\r\n\t\t\t\t{posts.map((post) => (\r\n\t\t\t\t\t<PostCard key={post.id} post={post} />\r\n\t\t\t\t))}\r\n\t\t\t</GridSection>\r\n\r\n\t\t\t{isCompact && (\r\n\t\t\t\t<Link href={`/category/${title}`} passHref={true}>\r\n\t\t\t\t\t<LinkSection>More in {title}</LinkSection>\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t</section>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}